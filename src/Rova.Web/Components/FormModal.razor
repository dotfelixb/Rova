<div class="fixed z-50 inset-0 overflow-y-auto" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
        <!-- This element is to trick the browser into centering the modal contents. -->
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
        <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
            <div class="bg-white p-4 max-h-80 overflow-y-scroll">
                <div class="flex">
                    <div class="flex w-1/2">
                        <h3 class="text-sm leading-6 font-medium text-gray-900" id="modal-title">
                            @Title
                        </h3>
                    </div>
                    <div class="flex w-1/2 justify-end">
                        <button @onclick="@InvokeOnClose">
                            <i class="gg-close"></i>
                        </button>
                    </div>
                </div>
                <div class=" mt-2">
                    @ChildContent
                </div>
            </div>
            <div class="bg-gray-50 p-4 flex justify-end">
                <Button Text="Save" ButtonType="primary" OnClick="@HandleSubmit" />
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public string Title { get; set; }
    [Parameter] public RenderFragment @ChildContent { get; set; }
    [Parameter] public Action OnClose { get; set; }
    [Parameter] public Action OnSubmit { get; set; }

    protected void InvokeOnClose()
    {
        OnClose?.Invoke();
    }

    protected void HandleSubmit()
    {
        OnSubmit?.Invoke();
    }
}
